<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsz.mapper.ModulesMapper">

	<!-- List<Modules> getModulesByUid(String uid);	根据用户id获取模块 -->
	<select id="getModulesByUid" resultMap="modulesMap">
		select * from t_modules where mid in (
			select mid from t_roles_modules where rid in (
				select rid from t_roles where rid in (
					select rid from t_user_roles where uid = #{uid}
				)
			)
		) order by mweight desc
	</select>
	
	<!-- List<Modules> getAllModules(); 获取所有模块-->
	<select id="getAllModules" resultMap="modulesMap">
		select * from t_modules order by mweight desc
	</select>
	
	<!-- List<Integer> getByRid(Integer rid);	根据角色id 查询当前角色拥有哪些模块 -->
	<select id="getByRid" resultType="int">
		select * from t_modules where mid in (
			select mid from t_roles_modules where rid = #{rid}
		) and parentid &lt;&gt; 0
	</select>
	
	<!-- int deleteRid(Integer rid);	根据角色id删除当前角色拥有的全部模块 -->
	<delete id="deleteRid">
		delete from t_roles_modules where rid = #{rid}
	</delete>
	
	<!-- int insertRM(Integer rid, Integer mid);	向角色和模块的中间表里添加数据 -->
	<insert id="insertRM">
		insert into t_roles_modules(rid, mid) values (#{rid}, #{mid})
	</insert>
	
	<!-- Modules findByMname(String title); 查询该模块名是否存在-->
	<select id="findByMname" resultMap="modulesMap">
		select * from t_modules where mname = #{title} and parentid = 0
	</select>
	
	<!-- Modules addF(Modules modules); 新增父模块-->
	<insert id="addF">
		insert into t_modules(mname,parentid,mweight,styleicon) values(#{title},#{parentid},#{mweight},#{styleicon}) 
	</insert>
	
	<!-- List<Modules> getAllAll(); 	查询所有模块-->
	<select id="getAllAll" resultMap="modulesMap">
		select * from t_modules order by mweight desc
	</select>
	
	<!-- List<Modules> getAllF(); 	查询所有父模块 -->
	<select id="getAllF" resultMap="modulesMap">
		select * from t_modules where parentid = 0
	</select>
	
	<!-- Integer add(Modules modules); 	新增子模块 -->
	<insert id="add">
		insert into t_modules(mname,parentid,mpath,mweight,styleicon) values(#{title},#{parentid},#{mpath},#{mweight},#{styleicon}) 
	</insert>
	
	<!-- int delModulesNum(Integer id);	删除前先查查当前数据下有没有子模块 -->
	<select id="delModulesNum" resultType="int">
		select count(*) from t_modules where parentid = #{id}
	</select>
	
	<!-- Integer del(Integer id); 删除模块 -->
	<delete id="del">
		delete from t_modules where mid = #{id}
	</delete>
	
	<!-- Integer edit(Modules modules); 修改模块 -->
	<update id="edit">
		update t_modules
		<set>
			<if test="title != '' and title != null">mname = #{title}</if>
			<if test="parentid != '' and parentid != null">,parentid = #{parentid}</if>
			<if test="mpath != '' and mpath != null">,mpath = #{mpath}</if>
			<if test="mweight != '' and mweight != null">,mweight = #{mweight}</if>
			<if test="styleicon != '' and styleicon != null">,styleicon = #{styleicon}</if>
		</set>
		<where>
			<if test="id != '' and id != null">
				mid = #{id}
			</if>
		</where>
	</update>
	
	<!-- 删除子模块前先查查有没有关联角色信息 int checkRolesModu(Integer id); -->
	<select id="checkRolesModu" resultType="int">
		select count(*) from t_roles_modules where mid = #{id}
	</select>
	
	<!-- 查找父模块下有没有此节点 int findByMnamechildren(Integer id, String title); -->
	<select id="findByMnamechildren" resultType="int">
		select count(*) from t_modules where parentid = #{id} and mname = #{title}
	</select>
	
	<!-- 结果集映射 -->
	<resultMap type="modules" id="modulesMap">
		<id property="id" column="mid"/>
		<result property="title" column="mname"/>
		<result property="parentid" column="parentid"/>
		<result property="mpath" column="mpath"/>
		<result property="mweight" column="mweight"/>
		<result property="styleicon" column="styleicon"/>
	</resultMap>
	
</mapper>