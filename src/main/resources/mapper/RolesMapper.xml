<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsz.mapper.RolesMapper">

	<!-- List<Roles> getAll();	获取所有角色 -->
	<select id="getAll" resultType="roles">
		select * from t_roles
	</select>

	<!-- List<Roles> getUserRoles(String uid);	根据用户id查询该用户拥有哪些角色 -->
	<select id="getUserRoles" resultType="roles">
		select * from t_roles where rid in (
			select rid from t_user_roles where uid = #{uid}
		)
	</select>
	
	<!-- List<Roles> findAll(FenyeUtil<Roles> fy);	 获取所有数据-->
	<!-- 
		id: 方法名称
		parameterType: 参数类型
		resultMap: 返回值结果集映射
	 -->
	<select id="findAll" parameterType="roles" resultMap="rolesMap">
		select * from t_roles 
		<where>
			<!-- 条件查询的参数 -->
			<if test="t.rname != '' and t.rname != null">rname like "%" #{t.rname} "%"</if>
		</where>
		limit #{page}, #{limit}
	</select>
	
	<!-- Integer getCount(FenyeUtil<Roles> fy);	获取数据总条数 -->
	<!-- 
		id: 方法名称
		parameterType: 参数类型
		resultType: 返回值类型
	 -->
	<select id="getCount" parameterType="roles" resultType="int">
		select count(*) from t_roles
		<where>
			<!-- 条件查询的参数 -->
			<if test="t.rname != '' and t.rname != null">rname like "%" #{t.rname} "%"</if>
		</where>
	</select>
	
	<!-- int addRoles(Roles roles);	添加角色 -->
	<!-- 
		id: 方法名称
		parameterType: 参数类型
		添加操作的返回值是int类型
	 -->
	<insert id="addRoles" parameterType="roles">
		insert into t_roles(rname) values (#{rname})
	</insert>
	
	<!-- int editRoles(Roles roles);	修改角色名 -->
	<!-- 
		id: 方法名称
		parameterType: 参数类型
		修改操作的返回值是int类型
	 -->
	<update id="editRoles" parameterType="roles">
		update t_roles set rname = #{rname} where rid = #{rid}
	</update>
	
	<!-- Integer deleteRid(List<Integer> rids);	删除   同时实现批量删除和单个删除 -->
	<!-- 
		id: 方法名称
		foreach: 遍历参数的标签
		collection: 参数类型 为集合
		index: 下标
		item: 指代遍历的每一项
		open: 开始符号
		separator: 参数分割符
		close: 结束符号
	 -->
	<delete id="deleteRid">
		delete from t_roles where rid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- List<Roles> getOne(Roles roles);	 根据一个条件（角色名）查询角色（用于添加，查询角色名是否重复） -->
	<select id="getOne" parameterType="roles" resultMap="rolesMap">
		select * from t_roles
		<where>
			<if test="rid != '' and rid != null">rid &lt;&gt; #{rid}</if>
			<if test="rname != '' and rname != null">and rname = #{rname}</if>
		</where>
	</select>
	
	<!-- 删除角色前查查有没有相关的权限  int checkListByIds(List<Integer> rids); -->
	<select id="checkListByIds" resultType="int">
		select count(*) from t_roles_modules where rid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 结果集映射 -->
	<resultMap type="roles" id="rolesMap">
		<id property="rid" column="rid"/>
		<result property="rname" column="rname"/>
	</resultMap>

</mapper>