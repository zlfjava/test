<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsz.mapper.PermissionMapper">

	<!-- List<Permission> getAllPermission();	获取所有权限 -->
	<select id="getAllPermission" resultMap="permissionMap">
		select * from t_permission
	</select>
	
	<!-- List<Integer> getByRoleid(Integer rid);	根据角色id获取该角色拥有的操作权限  用于勾选已拥有的权限 -->
	<select id="getByRoleid" resultType="int">
		select pid from t_permission where pid in (
			select permissionid from t_roles_permission where roleid = #{rid}
		) and parentid &lt;&gt; 0
	</select>
	
	<!-- int delByRid(Integer rid);	根据角色id删除该角色的所有权限 -->
	<delete id="delByRid">
		delete from t_roles_permission where roleid = #{rid}
	</delete>
	
	<!-- int addRolesPermission(Integer rid, int pid);	给角色-权限表添加数据 -->
	<insert id="addRolesPermission">
		insert into t_roles_permission(roleid, permissionid) values(#{rid}, #{pid})
	</insert>
	
	<!-- List<Permission> checkQuanXian(String uid);	根据用户id获取该用户所拥有的权限 -->
	<select id="checkQuanXian" resultMap="permissionMap">
		select * from t_permission where pid in (
			select permissionid from t_roles_permission where roleid in (
				select rid from t_roles where rid in (
					select rid from t_user_roles where uid = #{uid}
				)
			)
		)
	</select>
	
	<!-- List<PermissionTreeTable> findAllByCaoZuo(); 查询所有treetable-->
	<select id="findAllByCaoZuo" resultMap="permissionMap">
		select * from t_permission
	</select>
	
	<!-- List<Permission> getAllF(); 查询所有父模块 -->
	<select id="getAllF" resultMap="permissionMap">
		select * from t_permission where parentid = 0
	</select>
	
	<!-- int add(Permission permission); 新增子模块 -->
	<insert id="add">
	    insert into t_permission values(null,#{title},#{parentid},#{permissionvalue},
	    #{permissionmodule},#{permissionname})
	</insert>
	
	<!-- List<Permission> getPermissionmodule(int id); 拿到模块id -->
	<select id="getPermissionmodule" resultMap="permissionMap">
		select * from t_permission where pid = #{id}
	</select>
	
	<!-- int delModulesNum(Integer id); 删除前先查查当前数据下有没有子模块 -->
	<select id="delModulesNum" resultType="int">
	   select count(*) from t_permission where parentid = #{id}
	</select>
	
	<!-- Integer del(Integer id); 删除模块-->
	<delete id="del">
		delete from t_permission where pid = #{id}
	</delete>
	
	<!-- 根据角色id获取该角色拥有的模块	List<Integer> getModilesByRid(Integer rid); -->
	<select id="getModilesByRid" resultMap="permissionMap">
		select * from t_permission where permissionmodule in (
			select mid from t_modules where mid in (
				select mid from t_roles_modules where rid = #{rid}
			) and parentid &lt;&gt; 0
		)
	</select>
	
	<!-- Integer edit(Permission permission); -->
	<update id="edit">
		update t_permission
		<set>
			<if test="title != '' and title != null">pname = #{title}</if>
			<if test="parentid != '' and parentid != null">,parentid = #{parentid}</if>
			<if test="permissionvalue != '' and permissionvalue != null">,permissionvalue = #{permissionvalue}</if>
			<if test="permissionname != '' and permissionname != null">,permissionname = #{permissionname}</if>
		</set>
		<where>
			<if test="id != '' and id != null">
				pid = #{id}
			</if>
		</where>
	</update>
	
	<!-- 结果集映射 -->
	<resultMap type="permission" id="permissionMap">
		<id property="id" column="pid"/>
		<result property="title" column="pname"/>
		<result property="parentid" column="parentid"/>
		<result property="permissionvalue" column="permissionvalue"/>
		<result property="permissionmodule" column="permissionmodule"/>
		<result property="permissionname" column="permissionname"/>
	</resultMap>

</mapper>